<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <Authors>Improbable</Authors>
        <Copyright>Copyright 2019 Improbable</Copyright>
        <Description>Platform C# SDK that allows interacting with the SpatialOS Platform.</Description>
        <PackageTags>Platform SDK;Improbable;SpatialOS Platform</PackageTags>
        <PackageProjectUrl>https://github.com/spatialos/platform-sdk-csharp</PackageProjectUrl>
        <RepositoryUrl>$(PackageProjectUrl)</RepositoryUrl>
        <RepositoryType>git</RepositoryType>
        <AssemblyName>Improbable.SpatialOS.Platform</AssemblyName>
        <RootNamespace>Improbable.SpatialOS.Platform</RootNamespace>
    </PropertyGroup>

    <PropertyGroup>
        <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
        <Deterministic>true</Deterministic>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <TargetFrameworks>netstandard1.6</TargetFrameworks>
    </PropertyGroup>

    <ItemGroup>
      <PackageReference Include="Google.LongRunning" Version="1.0.0" />
      <PackageReference Include="ILRepack.MSBuild.Task" Version="2.0.13" />
      <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" PrivateAssets="All" Version="1.0.0-preview.2" />
    </ItemGroup>

    <!-- For details on configuring ILRepack see https://www.phillipsj.net/posts/using-ilrepack-with-dotnet-core-sdk-and-dotnet-standard -->
    <Target Name="ILRepack" AfterTargets="Pack" Condition="'$(Configuration)' == 'Release' ">
        <PropertyGroup>
            <WorkingDirectory>$(MSBuildThisFileDirectory)bin\$(Configuration)\netstandard1.6</WorkingDirectory>
        </PropertyGroup>

        <ItemGroup>
			<InputAssemblies Include="Improbable.SpatialOS.Platform.dll" />
            <InputAssemblies Include="Google.Api.CommonProtos.dll" />
            <InputAssemblies Include="Google.Api.Gax.Grpc.dll" />
            <InputAssemblies Include="Google.Api.Gax.dll" />
            <InputAssemblies Include="Google.Apis.Auth.PlatformServices.dll" />
            <InputAssemblies Include="Google.Apis.Auth.dll" />
            <InputAssemblies Include="Google.Apis.Core.dll" />
            <InputAssemblies Include="Google.Apis.dll" />
            <InputAssemblies Include="Google.LongRunning.dll" />
            <InputAssemblies Include="Google.Protobuf.dll" />
            <InputAssemblies Include="Google.Protobuf.dll" />
            <InputAssemblies Include="Grpc.Auth.dll" />
            <InputAssemblies Include="Grpc.Core.dll" />
            <InputAssemblies Include="Newtonsoft.Json.dll" />
            <InputAssemblies Include="System.Interactive.Async.dll" />
        </ItemGroup>

        <!-- These DLLs are not internalised because they contains types that are user-facing. Internalising would mess up the namespace. -->
        <ItemGroup>
            <InternalizeExcludeAssemblies Include="Improbable.SpatialOS.Platform" />
            <InternalizeExcludeAssemblies Include="Google.Api.Gax" />
            <InternalizeExcludeAssemblies Include="Google.LongRunning" />
            <InternalizeExcludeAssemblies Include="Google.Protobuf.WellKnownTypes" />
            <InternalizeExcludeAssemblies Include="Grpc.Core" />
        </ItemGroup>
        
        <ILRepack Parallel="true" OutputType="$(OutputType)" MainAssembly="$(AssemblyName).dll" OutputAssembly="$(AssemblyName).dll" InputAssemblies="@(InputAssemblies)" InternalizeExcludeAssemblies="@(InternalizeExcludeAssemblies)" Internalize="true" WorkingDirectory="$(WorkingDirectory)" />

        <ItemGroup>
            <AssembliesToDelete Include="$(WorkingDirectory)/%(InputAssemblies.Identity)" />
        </ItemGroup>

        <Delete Files="@(AssembliesToDelete)" />
        
    </Target>

</Project>
