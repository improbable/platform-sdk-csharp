// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/improbable/spatialos/playerauth/v1alpha1/player_identity.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Improbable.SpatialOS.PlayerAuth.V1Alpha1 {

  /// <summary>Holder for reflection information generated from proto/improbable/spatialos/playerauth/v1alpha1/player_identity.proto</summary>
  public static partial class PlayerIdentityReflection {

    #region Descriptor
    /// <summary>File descriptor for proto/improbable/spatialos/playerauth/v1alpha1/player_identity.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PlayerIdentityReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkRwcm90by9pbXByb2JhYmxlL3NwYXRpYWxvcy9wbGF5ZXJhdXRoL3YxYWxw",
            "aGExL3BsYXllcl9pZGVudGl0eS5wcm90bxIoaW1wcm9iYWJsZS5zcGF0aWFs",
            "b3MucGxheWVyYXV0aC52MWFscGhhMSIcCgtQbGF5ZXJUb2tlbhINCgV0b2tl",
            "bhgBIAEoCSJLChhDcmVhdGVQbGF5ZXJUb2tlblJlcXVlc3QSGQoRcGxheWVy",
            "X2lkZW50aWZpZXIYASABKAkSFAoMcHJvamVjdF9uYW1lGAIgASgJImEKGUNy",
            "ZWF0ZVBsYXllclRva2VuUmVzcG9uc2USRAoFdG9rZW4YASABKAsyNS5pbXBy",
            "b2JhYmxlLnNwYXRpYWxvcy5wbGF5ZXJhdXRoLnYxYWxwaGExLlBsYXllclRv",
            "a2VuMrMBChJQbGF5ZXJUb2tlblNlcnZpY2USnAEKEUNyZWF0ZVBsYXllclRv",
            "a2VuEkIuaW1wcm9iYWJsZS5zcGF0aWFsb3MucGxheWVyYXV0aC52MWFscGhh",
            "MS5DcmVhdGVQbGF5ZXJUb2tlblJlcXVlc3QaQy5pbXByb2JhYmxlLnNwYXRp",
            "YWxvcy5wbGF5ZXJhdXRoLnYxYWxwaGExLkNyZWF0ZVBsYXllclRva2VuUmVz",
            "cG9uc2VCYFozaW1wcm9iYWJsZS9zcGF0aWFsb3MvcGxheWVyYXV0aC92MWFs",
            "cGhhMTtwbGF5ZXJhdXRoqgIoSW1wcm9iYWJsZS5TcGF0aWFsT1MuUGxheWVy",
            "QXV0aC5WMUFscGhhMWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Improbable.SpatialOS.PlayerAuth.V1Alpha1.PlayerToken), global::Improbable.SpatialOS.PlayerAuth.V1Alpha1.PlayerToken.Parser, new[]{ "Token" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Improbable.SpatialOS.PlayerAuth.V1Alpha1.CreatePlayerTokenRequest), global::Improbable.SpatialOS.PlayerAuth.V1Alpha1.CreatePlayerTokenRequest.Parser, new[]{ "PlayerIdentifier", "ProjectName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Improbable.SpatialOS.PlayerAuth.V1Alpha1.CreatePlayerTokenResponse), global::Improbable.SpatialOS.PlayerAuth.V1Alpha1.CreatePlayerTokenResponse.Parser, new[]{ "Token" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PlayerToken : pb::IMessage<PlayerToken> {
    private static readonly pb::MessageParser<PlayerToken> _parser = new pb::MessageParser<PlayerToken>(() => new PlayerToken());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerToken> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Improbable.SpatialOS.PlayerAuth.V1Alpha1.PlayerIdentityReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerToken() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerToken(PlayerToken other) : this() {
      token_ = other.token_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerToken Clone() {
      return new PlayerToken(this);
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 1;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerToken);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerToken other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Token != other.Token) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Token.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerToken other) {
      if (other == null) {
        return;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreatePlayerTokenRequest : pb::IMessage<CreatePlayerTokenRequest> {
    private static readonly pb::MessageParser<CreatePlayerTokenRequest> _parser = new pb::MessageParser<CreatePlayerTokenRequest>(() => new CreatePlayerTokenRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreatePlayerTokenRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Improbable.SpatialOS.PlayerAuth.V1Alpha1.PlayerIdentityReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePlayerTokenRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePlayerTokenRequest(CreatePlayerTokenRequest other) : this() {
      playerIdentifier_ = other.playerIdentifier_;
      projectName_ = other.projectName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePlayerTokenRequest Clone() {
      return new CreatePlayerTokenRequest(this);
    }

    /// <summary>Field number for the "player_identifier" field.</summary>
    public const int PlayerIdentifierFieldNumber = 1;
    private string playerIdentifier_ = "";
    /// <summary>
    //// Player identifier, eg: username
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerIdentifier {
      get { return playerIdentifier_; }
      set {
        playerIdentifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "project_name" field.</summary>
    public const int ProjectNameFieldNumber = 2;
    private string projectName_ = "";
    /// <summary>
    //// Name of the project player_identifier should access
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectName {
      get { return projectName_; }
      set {
        projectName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreatePlayerTokenRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreatePlayerTokenRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerIdentifier != other.PlayerIdentifier) return false;
      if (ProjectName != other.ProjectName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerIdentifier.Length != 0) hash ^= PlayerIdentifier.GetHashCode();
      if (ProjectName.Length != 0) hash ^= ProjectName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerIdentifier.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerIdentifier);
      }
      if (ProjectName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProjectName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerIdentifier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerIdentifier);
      }
      if (ProjectName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreatePlayerTokenRequest other) {
      if (other == null) {
        return;
      }
      if (other.PlayerIdentifier.Length != 0) {
        PlayerIdentifier = other.PlayerIdentifier;
      }
      if (other.ProjectName.Length != 0) {
        ProjectName = other.ProjectName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            PlayerIdentifier = input.ReadString();
            break;
          }
          case 18: {
            ProjectName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreatePlayerTokenResponse : pb::IMessage<CreatePlayerTokenResponse> {
    private static readonly pb::MessageParser<CreatePlayerTokenResponse> _parser = new pb::MessageParser<CreatePlayerTokenResponse>(() => new CreatePlayerTokenResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreatePlayerTokenResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Improbable.SpatialOS.PlayerAuth.V1Alpha1.PlayerIdentityReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePlayerTokenResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePlayerTokenResponse(CreatePlayerTokenResponse other) : this() {
      Token = other.token_ != null ? other.Token.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePlayerTokenResponse Clone() {
      return new CreatePlayerTokenResponse(this);
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 1;
    private global::Improbable.SpatialOS.PlayerAuth.V1Alpha1.PlayerToken token_;
    /// <summary>
    //// Token granting the player access to the requested project
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Improbable.SpatialOS.PlayerAuth.V1Alpha1.PlayerToken Token {
      get { return token_; }
      set {
        token_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreatePlayerTokenResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreatePlayerTokenResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Token, other.Token)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (token_ != null) hash ^= Token.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (token_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Token);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (token_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Token);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreatePlayerTokenResponse other) {
      if (other == null) {
        return;
      }
      if (other.token_ != null) {
        if (token_ == null) {
          token_ = new global::Improbable.SpatialOS.PlayerAuth.V1Alpha1.PlayerToken();
        }
        Token.MergeFrom(other.Token);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (token_ == null) {
              token_ = new global::Improbable.SpatialOS.PlayerAuth.V1Alpha1.PlayerToken();
            }
            input.ReadMessage(token_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
