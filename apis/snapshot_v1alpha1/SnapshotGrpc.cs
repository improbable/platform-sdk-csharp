// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/improbable/spatialos/snapshot/v1alpha1/snapshot.proto
// Original file comments:
// Provides methods to access Snapshots.
//
#pragma warning disable 1591
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace Improbable.SpatialOS.Snapshot.V1Alpha1 {
  /// <summary>
  /// SnapshotService provides methods for managing snapshots.
  /// </summary>
  public static partial class SnapshotService
  {
    static readonly string __ServiceName = "improbable.spatialos.snapshot.v1alpha1.SnapshotService";

    static readonly grpc::Marshaller<global::Improbable.SpatialOS.Snapshot.V1Alpha1.ListSnapshotsRequest> __Marshaller_ListSnapshotsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.SpatialOS.Snapshot.V1Alpha1.ListSnapshotsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.SpatialOS.Snapshot.V1Alpha1.ListSnapshotsResponse> __Marshaller_ListSnapshotsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.SpatialOS.Snapshot.V1Alpha1.ListSnapshotsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.SpatialOS.Snapshot.V1Alpha1.GetSnapshotRequest> __Marshaller_GetSnapshotRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.SpatialOS.Snapshot.V1Alpha1.GetSnapshotRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.SpatialOS.Snapshot.V1Alpha1.GetSnapshotResponse> __Marshaller_GetSnapshotResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.SpatialOS.Snapshot.V1Alpha1.GetSnapshotResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.SpatialOS.Snapshot.V1Alpha1.TakeSnapshotRequest> __Marshaller_TakeSnapshotRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.SpatialOS.Snapshot.V1Alpha1.TakeSnapshotRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_Operation = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.LongRunning.Operation.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.SpatialOS.Snapshot.V1Alpha1.UploadSnapshotRequest> __Marshaller_UploadSnapshotRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.SpatialOS.Snapshot.V1Alpha1.UploadSnapshotRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.SpatialOS.Snapshot.V1Alpha1.UploadSnapshotResponse> __Marshaller_UploadSnapshotResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.SpatialOS.Snapshot.V1Alpha1.UploadSnapshotResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.SpatialOS.Snapshot.V1Alpha1.ConfirmUploadRequest> __Marshaller_ConfirmUploadRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.SpatialOS.Snapshot.V1Alpha1.ConfirmUploadRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.SpatialOS.Snapshot.V1Alpha1.ConfirmUploadResponse> __Marshaller_ConfirmUploadResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.SpatialOS.Snapshot.V1Alpha1.ConfirmUploadResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Improbable.SpatialOS.Snapshot.V1Alpha1.ListSnapshotsRequest, global::Improbable.SpatialOS.Snapshot.V1Alpha1.ListSnapshotsResponse> __Method_ListSnapshots = new grpc::Method<global::Improbable.SpatialOS.Snapshot.V1Alpha1.ListSnapshotsRequest, global::Improbable.SpatialOS.Snapshot.V1Alpha1.ListSnapshotsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListSnapshots",
        __Marshaller_ListSnapshotsRequest,
        __Marshaller_ListSnapshotsResponse);

    static readonly grpc::Method<global::Improbable.SpatialOS.Snapshot.V1Alpha1.GetSnapshotRequest, global::Improbable.SpatialOS.Snapshot.V1Alpha1.GetSnapshotResponse> __Method_GetSnapshot = new grpc::Method<global::Improbable.SpatialOS.Snapshot.V1Alpha1.GetSnapshotRequest, global::Improbable.SpatialOS.Snapshot.V1Alpha1.GetSnapshotResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSnapshot",
        __Marshaller_GetSnapshotRequest,
        __Marshaller_GetSnapshotResponse);

    static readonly grpc::Method<global::Improbable.SpatialOS.Snapshot.V1Alpha1.TakeSnapshotRequest, global::Google.LongRunning.Operation> __Method_TakeSnapshot = new grpc::Method<global::Improbable.SpatialOS.Snapshot.V1Alpha1.TakeSnapshotRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TakeSnapshot",
        __Marshaller_TakeSnapshotRequest,
        __Marshaller_Operation);

    static readonly grpc::Method<global::Improbable.SpatialOS.Snapshot.V1Alpha1.UploadSnapshotRequest, global::Improbable.SpatialOS.Snapshot.V1Alpha1.UploadSnapshotResponse> __Method_UploadSnapshot = new grpc::Method<global::Improbable.SpatialOS.Snapshot.V1Alpha1.UploadSnapshotRequest, global::Improbable.SpatialOS.Snapshot.V1Alpha1.UploadSnapshotResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UploadSnapshot",
        __Marshaller_UploadSnapshotRequest,
        __Marshaller_UploadSnapshotResponse);

    static readonly grpc::Method<global::Improbable.SpatialOS.Snapshot.V1Alpha1.ConfirmUploadRequest, global::Improbable.SpatialOS.Snapshot.V1Alpha1.ConfirmUploadResponse> __Method_ConfirmUpload = new grpc::Method<global::Improbable.SpatialOS.Snapshot.V1Alpha1.ConfirmUploadRequest, global::Improbable.SpatialOS.Snapshot.V1Alpha1.ConfirmUploadResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfirmUpload",
        __Marshaller_ConfirmUploadRequest,
        __Marshaller_ConfirmUploadResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Improbable.SpatialOS.Snapshot.V1Alpha1.SnapshotReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of SnapshotService</summary>
    public abstract partial class SnapshotServiceBase
    {
      /// <summary>
      /// List a deployment's snapshots.
      ///
      /// The following fields are mandatory:
      /// - `project_name`
      /// - `deployment_name`
      ///
      /// `project_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      /// `deployment_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      ///
      /// The remaining fields are optional:
      ///  - If provided, the `page_size` must be a positive integer. If omitted,
      ///    the default value of 20 is used.
      ///  - The `page_token` should be omitted in the first request. If the response
      ///    contains a page token, this token should be included in the next request, and
      ///    so on until a response is received with no page token.
      ///
      /// Snapshots are sorted by creation time, descending.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Improbable.SpatialOS.Snapshot.V1Alpha1.ListSnapshotsResponse> ListSnapshots(global::Improbable.SpatialOS.Snapshot.V1Alpha1.ListSnapshotsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get the details of a specific snapshot.
      ///
      /// These fields are mandatory:
      /// - `project_name`
      /// - `deployment_name`
      /// - `id`
      ///
      /// `project_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      /// `deployment_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      /// `id` must be a 64-bit integer.
      ///
      /// Empty or invalid fields result in an `InvalidArgument` error.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Improbable.SpatialOS.Snapshot.V1Alpha1.GetSnapshotResponse> GetSnapshot(global::Improbable.SpatialOS.Snapshot.V1Alpha1.GetSnapshotRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Take a snapshot of a running deployment.
      ///
      /// Currently, you can only supply these fields:
      /// - `project_name`
      /// - `deployment_name`
      /// - `tags`
      ///
      /// Other set values will be ignored.
      ///
      /// In addition, these fields are mandatory:
      /// - `project_name`
      /// - `deployment_name`
      ///
      /// `project_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      /// `deployment_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      ///
      /// Failure to set either of these will result in an `InvalidArgument` error.
      ///
      /// The returned operation result is of type `snapshot`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> TakeSnapshot(global::Improbable.SpatialOS.Snapshot.V1Alpha1.TakeSnapshotRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Upload a new snapshot (returns a URL to upload its contents to).
      ///
      /// Currently, you can only supply these fields:
      /// - `project_name`
      /// - `deployment_name`
      /// - `tags`
      /// - `checksum`
      ///
      /// Other set values will be ignored.
      ///
      /// In addition, these fields are mandatory:
      /// - `project_name`
      /// - `deployment_name`
      /// - `checksum`
      ///
      /// `project_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      /// `deployment_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      ///
      /// Failure to set any of these will result in an `InvalidArgument` error.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Improbable.SpatialOS.Snapshot.V1Alpha1.UploadSnapshotResponse> UploadSnapshot(global::Improbable.SpatialOS.Snapshot.V1Alpha1.UploadSnapshotRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Confirm the Snapshot has been POSTed to the URL obtain from UploadSnapshot.
      ///
      /// These fields are mandatory:
      /// - `project_name`
      /// - `deployment_name`
      /// - `id`
      ///
      /// Other set values will be ignored.
      ///
      /// `project_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      /// `deployment_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      ///
      /// Failure to set any of these will result in an `InvalidArgument` error.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Improbable.SpatialOS.Snapshot.V1Alpha1.ConfirmUploadResponse> ConfirmUpload(global::Improbable.SpatialOS.Snapshot.V1Alpha1.ConfirmUploadRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for SnapshotService</summary>
    public partial class SnapshotServiceClient : grpc::ClientBase<SnapshotServiceClient>
    {
      /// <summary>Creates a new client for SnapshotService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public SnapshotServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for SnapshotService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public SnapshotServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected SnapshotServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected SnapshotServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// List a deployment's snapshots.
      ///
      /// The following fields are mandatory:
      /// - `project_name`
      /// - `deployment_name`
      ///
      /// `project_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      /// `deployment_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      ///
      /// The remaining fields are optional:
      ///  - If provided, the `page_size` must be a positive integer. If omitted,
      ///    the default value of 20 is used.
      ///  - The `page_token` should be omitted in the first request. If the response
      ///    contains a page token, this token should be included in the next request, and
      ///    so on until a response is received with no page token.
      ///
      /// Snapshots are sorted by creation time, descending.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Improbable.SpatialOS.Snapshot.V1Alpha1.ListSnapshotsResponse ListSnapshots(global::Improbable.SpatialOS.Snapshot.V1Alpha1.ListSnapshotsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListSnapshots(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List a deployment's snapshots.
      ///
      /// The following fields are mandatory:
      /// - `project_name`
      /// - `deployment_name`
      ///
      /// `project_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      /// `deployment_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      ///
      /// The remaining fields are optional:
      ///  - If provided, the `page_size` must be a positive integer. If omitted,
      ///    the default value of 20 is used.
      ///  - The `page_token` should be omitted in the first request. If the response
      ///    contains a page token, this token should be included in the next request, and
      ///    so on until a response is received with no page token.
      ///
      /// Snapshots are sorted by creation time, descending.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Improbable.SpatialOS.Snapshot.V1Alpha1.ListSnapshotsResponse ListSnapshots(global::Improbable.SpatialOS.Snapshot.V1Alpha1.ListSnapshotsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListSnapshots, null, options, request);
      }
      /// <summary>
      /// List a deployment's snapshots.
      ///
      /// The following fields are mandatory:
      /// - `project_name`
      /// - `deployment_name`
      ///
      /// `project_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      /// `deployment_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      ///
      /// The remaining fields are optional:
      ///  - If provided, the `page_size` must be a positive integer. If omitted,
      ///    the default value of 20 is used.
      ///  - The `page_token` should be omitted in the first request. If the response
      ///    contains a page token, this token should be included in the next request, and
      ///    so on until a response is received with no page token.
      ///
      /// Snapshots are sorted by creation time, descending.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Improbable.SpatialOS.Snapshot.V1Alpha1.ListSnapshotsResponse> ListSnapshotsAsync(global::Improbable.SpatialOS.Snapshot.V1Alpha1.ListSnapshotsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListSnapshotsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List a deployment's snapshots.
      ///
      /// The following fields are mandatory:
      /// - `project_name`
      /// - `deployment_name`
      ///
      /// `project_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      /// `deployment_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      ///
      /// The remaining fields are optional:
      ///  - If provided, the `page_size` must be a positive integer. If omitted,
      ///    the default value of 20 is used.
      ///  - The `page_token` should be omitted in the first request. If the response
      ///    contains a page token, this token should be included in the next request, and
      ///    so on until a response is received with no page token.
      ///
      /// Snapshots are sorted by creation time, descending.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Improbable.SpatialOS.Snapshot.V1Alpha1.ListSnapshotsResponse> ListSnapshotsAsync(global::Improbable.SpatialOS.Snapshot.V1Alpha1.ListSnapshotsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListSnapshots, null, options, request);
      }
      /// <summary>
      /// Get the details of a specific snapshot.
      ///
      /// These fields are mandatory:
      /// - `project_name`
      /// - `deployment_name`
      /// - `id`
      ///
      /// `project_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      /// `deployment_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      /// `id` must be a 64-bit integer.
      ///
      /// Empty or invalid fields result in an `InvalidArgument` error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Improbable.SpatialOS.Snapshot.V1Alpha1.GetSnapshotResponse GetSnapshot(global::Improbable.SpatialOS.Snapshot.V1Alpha1.GetSnapshotRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetSnapshot(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the details of a specific snapshot.
      ///
      /// These fields are mandatory:
      /// - `project_name`
      /// - `deployment_name`
      /// - `id`
      ///
      /// `project_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      /// `deployment_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      /// `id` must be a 64-bit integer.
      ///
      /// Empty or invalid fields result in an `InvalidArgument` error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Improbable.SpatialOS.Snapshot.V1Alpha1.GetSnapshotResponse GetSnapshot(global::Improbable.SpatialOS.Snapshot.V1Alpha1.GetSnapshotRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSnapshot, null, options, request);
      }
      /// <summary>
      /// Get the details of a specific snapshot.
      ///
      /// These fields are mandatory:
      /// - `project_name`
      /// - `deployment_name`
      /// - `id`
      ///
      /// `project_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      /// `deployment_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      /// `id` must be a 64-bit integer.
      ///
      /// Empty or invalid fields result in an `InvalidArgument` error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Improbable.SpatialOS.Snapshot.V1Alpha1.GetSnapshotResponse> GetSnapshotAsync(global::Improbable.SpatialOS.Snapshot.V1Alpha1.GetSnapshotRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetSnapshotAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the details of a specific snapshot.
      ///
      /// These fields are mandatory:
      /// - `project_name`
      /// - `deployment_name`
      /// - `id`
      ///
      /// `project_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      /// `deployment_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      /// `id` must be a 64-bit integer.
      ///
      /// Empty or invalid fields result in an `InvalidArgument` error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Improbable.SpatialOS.Snapshot.V1Alpha1.GetSnapshotResponse> GetSnapshotAsync(global::Improbable.SpatialOS.Snapshot.V1Alpha1.GetSnapshotRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSnapshot, null, options, request);
      }
      /// <summary>
      /// Take a snapshot of a running deployment.
      ///
      /// Currently, you can only supply these fields:
      /// - `project_name`
      /// - `deployment_name`
      /// - `tags`
      ///
      /// Other set values will be ignored.
      ///
      /// In addition, these fields are mandatory:
      /// - `project_name`
      /// - `deployment_name`
      ///
      /// `project_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      /// `deployment_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      ///
      /// Failure to set either of these will result in an `InvalidArgument` error.
      ///
      /// The returned operation result is of type `snapshot`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.LongRunning.Operation TakeSnapshot(global::Improbable.SpatialOS.Snapshot.V1Alpha1.TakeSnapshotRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return TakeSnapshot(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Take a snapshot of a running deployment.
      ///
      /// Currently, you can only supply these fields:
      /// - `project_name`
      /// - `deployment_name`
      /// - `tags`
      ///
      /// Other set values will be ignored.
      ///
      /// In addition, these fields are mandatory:
      /// - `project_name`
      /// - `deployment_name`
      ///
      /// `project_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      /// `deployment_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      ///
      /// Failure to set either of these will result in an `InvalidArgument` error.
      ///
      /// The returned operation result is of type `snapshot`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.LongRunning.Operation TakeSnapshot(global::Improbable.SpatialOS.Snapshot.V1Alpha1.TakeSnapshotRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TakeSnapshot, null, options, request);
      }
      /// <summary>
      /// Take a snapshot of a running deployment.
      ///
      /// Currently, you can only supply these fields:
      /// - `project_name`
      /// - `deployment_name`
      /// - `tags`
      ///
      /// Other set values will be ignored.
      ///
      /// In addition, these fields are mandatory:
      /// - `project_name`
      /// - `deployment_name`
      ///
      /// `project_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      /// `deployment_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      ///
      /// Failure to set either of these will result in an `InvalidArgument` error.
      ///
      /// The returned operation result is of type `snapshot`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> TakeSnapshotAsync(global::Improbable.SpatialOS.Snapshot.V1Alpha1.TakeSnapshotRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return TakeSnapshotAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Take a snapshot of a running deployment.
      ///
      /// Currently, you can only supply these fields:
      /// - `project_name`
      /// - `deployment_name`
      /// - `tags`
      ///
      /// Other set values will be ignored.
      ///
      /// In addition, these fields are mandatory:
      /// - `project_name`
      /// - `deployment_name`
      ///
      /// `project_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      /// `deployment_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      ///
      /// Failure to set either of these will result in an `InvalidArgument` error.
      ///
      /// The returned operation result is of type `snapshot`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> TakeSnapshotAsync(global::Improbable.SpatialOS.Snapshot.V1Alpha1.TakeSnapshotRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TakeSnapshot, null, options, request);
      }
      /// <summary>
      /// Upload a new snapshot (returns a URL to upload its contents to).
      ///
      /// Currently, you can only supply these fields:
      /// - `project_name`
      /// - `deployment_name`
      /// - `tags`
      /// - `checksum`
      ///
      /// Other set values will be ignored.
      ///
      /// In addition, these fields are mandatory:
      /// - `project_name`
      /// - `deployment_name`
      /// - `checksum`
      ///
      /// `project_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      /// `deployment_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      ///
      /// Failure to set any of these will result in an `InvalidArgument` error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Improbable.SpatialOS.Snapshot.V1Alpha1.UploadSnapshotResponse UploadSnapshot(global::Improbable.SpatialOS.Snapshot.V1Alpha1.UploadSnapshotRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UploadSnapshot(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Upload a new snapshot (returns a URL to upload its contents to).
      ///
      /// Currently, you can only supply these fields:
      /// - `project_name`
      /// - `deployment_name`
      /// - `tags`
      /// - `checksum`
      ///
      /// Other set values will be ignored.
      ///
      /// In addition, these fields are mandatory:
      /// - `project_name`
      /// - `deployment_name`
      /// - `checksum`
      ///
      /// `project_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      /// `deployment_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      ///
      /// Failure to set any of these will result in an `InvalidArgument` error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Improbable.SpatialOS.Snapshot.V1Alpha1.UploadSnapshotResponse UploadSnapshot(global::Improbable.SpatialOS.Snapshot.V1Alpha1.UploadSnapshotRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UploadSnapshot, null, options, request);
      }
      /// <summary>
      /// Upload a new snapshot (returns a URL to upload its contents to).
      ///
      /// Currently, you can only supply these fields:
      /// - `project_name`
      /// - `deployment_name`
      /// - `tags`
      /// - `checksum`
      ///
      /// Other set values will be ignored.
      ///
      /// In addition, these fields are mandatory:
      /// - `project_name`
      /// - `deployment_name`
      /// - `checksum`
      ///
      /// `project_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      /// `deployment_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      ///
      /// Failure to set any of these will result in an `InvalidArgument` error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Improbable.SpatialOS.Snapshot.V1Alpha1.UploadSnapshotResponse> UploadSnapshotAsync(global::Improbable.SpatialOS.Snapshot.V1Alpha1.UploadSnapshotRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UploadSnapshotAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Upload a new snapshot (returns a URL to upload its contents to).
      ///
      /// Currently, you can only supply these fields:
      /// - `project_name`
      /// - `deployment_name`
      /// - `tags`
      /// - `checksum`
      ///
      /// Other set values will be ignored.
      ///
      /// In addition, these fields are mandatory:
      /// - `project_name`
      /// - `deployment_name`
      /// - `checksum`
      ///
      /// `project_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      /// `deployment_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      ///
      /// Failure to set any of these will result in an `InvalidArgument` error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Improbable.SpatialOS.Snapshot.V1Alpha1.UploadSnapshotResponse> UploadSnapshotAsync(global::Improbable.SpatialOS.Snapshot.V1Alpha1.UploadSnapshotRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UploadSnapshot, null, options, request);
      }
      /// <summary>
      /// Confirm the Snapshot has been POSTed to the URL obtain from UploadSnapshot.
      ///
      /// These fields are mandatory:
      /// - `project_name`
      /// - `deployment_name`
      /// - `id`
      ///
      /// Other set values will be ignored.
      ///
      /// `project_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      /// `deployment_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      ///
      /// Failure to set any of these will result in an `InvalidArgument` error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Improbable.SpatialOS.Snapshot.V1Alpha1.ConfirmUploadResponse ConfirmUpload(global::Improbable.SpatialOS.Snapshot.V1Alpha1.ConfirmUploadRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ConfirmUpload(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Confirm the Snapshot has been POSTed to the URL obtain from UploadSnapshot.
      ///
      /// These fields are mandatory:
      /// - `project_name`
      /// - `deployment_name`
      /// - `id`
      ///
      /// Other set values will be ignored.
      ///
      /// `project_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      /// `deployment_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      ///
      /// Failure to set any of these will result in an `InvalidArgument` error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Improbable.SpatialOS.Snapshot.V1Alpha1.ConfirmUploadResponse ConfirmUpload(global::Improbable.SpatialOS.Snapshot.V1Alpha1.ConfirmUploadRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfirmUpload, null, options, request);
      }
      /// <summary>
      /// Confirm the Snapshot has been POSTed to the URL obtain from UploadSnapshot.
      ///
      /// These fields are mandatory:
      /// - `project_name`
      /// - `deployment_name`
      /// - `id`
      ///
      /// Other set values will be ignored.
      ///
      /// `project_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      /// `deployment_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      ///
      /// Failure to set any of these will result in an `InvalidArgument` error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Improbable.SpatialOS.Snapshot.V1Alpha1.ConfirmUploadResponse> ConfirmUploadAsync(global::Improbable.SpatialOS.Snapshot.V1Alpha1.ConfirmUploadRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ConfirmUploadAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Confirm the Snapshot has been POSTed to the URL obtain from UploadSnapshot.
      ///
      /// These fields are mandatory:
      /// - `project_name`
      /// - `deployment_name`
      /// - `id`
      ///
      /// Other set values will be ignored.
      ///
      /// `project_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      /// `deployment_name` must conform to the regex: ^[a-z0-9_]{3,32}$
      ///
      /// Failure to set any of these will result in an `InvalidArgument` error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Improbable.SpatialOS.Snapshot.V1Alpha1.ConfirmUploadResponse> ConfirmUploadAsync(global::Improbable.SpatialOS.Snapshot.V1Alpha1.ConfirmUploadRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfirmUpload, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override SnapshotServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new SnapshotServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(SnapshotServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListSnapshots, serviceImpl.ListSnapshots)
          .AddMethod(__Method_GetSnapshot, serviceImpl.GetSnapshot)
          .AddMethod(__Method_TakeSnapshot, serviceImpl.TakeSnapshot)
          .AddMethod(__Method_UploadSnapshot, serviceImpl.UploadSnapshot)
          .AddMethod(__Method_ConfirmUpload, serviceImpl.ConfirmUpload).Build();
    }

  }
}
#endregion
