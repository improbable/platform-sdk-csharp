// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/improbable/spatialos/serviceaccount/v1alpha1/serviceaccount.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Improbable.SpatialOS.ServiceAccount.V1Alpha1 {

  /// <summary>Holder for reflection information generated from proto/improbable/spatialos/serviceaccount/v1alpha1/serviceaccount.proto</summary>
  public static partial class ServiceaccountReflection {

    #region Descriptor
    /// <summary>File descriptor for proto/improbable/spatialos/serviceaccount/v1alpha1/serviceaccount.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServiceaccountReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ckdwcm90by9pbXByb2JhYmxlL3NwYXRpYWxvcy9zZXJ2aWNlYWNjb3VudC92",
            "MWFscGhhMS9zZXJ2aWNlYWNjb3VudC5wcm90bxIsaW1wcm9iYWJsZS5zcGF0",
            "aWFsb3Muc2VydmljZWFjY291bnQudjFhbHBoYTEaNmdpdGh1Yi5jb20vbXdp",
            "dGtvdy9nby1wcm90by12YWxpZGF0b3JzL3ZhbGlkYXRvci5wcm90bxocZ29v",
            "Z2xlL2FwaS9hbm5vdGF0aW9ucy5wcm90bxobZ29vZ2xlL3Byb3RvYnVmL2Vt",
            "cHR5LnByb3RvGh5nb29nbGUvcHJvdG9idWYvZHVyYXRpb24ucHJvdG8aH2dv",
            "b2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8ixwEKClBlcm1pc3Npb24S",
            "TAoFdmVyYnMYASADKA4yPS5pbXByb2JhYmxlLnNwYXRpYWxvcy5zZXJ2aWNl",
            "YWNjb3VudC52MWFscGhhMS5QZXJtaXNzaW9uLlZlcmISMQoFcGFydHMYAiAD",
            "KAlCIuLfHx4KGl4oW2EtekEtWjAtOV9dezEsMjU1fXxcKikkaAoiOAoEVmVy",
            "YhIQCgxVTktOT1dOX1ZFUkIQABIICgRSRUFEEAESCQoFV1JJVEUQAhIJCgVH",
            "UkFOVBADIr4CCg5TZXJ2aWNlQWNjb3VudBIKCgJpZBgBIAEoAxIoCgRuYW1l",
            "GAIgASgJQhri3x8WChReW2EtekEtWjAtOV9dezUsNjR9JBIwCgxwcm9qZWN0",
            "X25hbWUYByABKAlCGuLfHxYKFF5bYS16QS1aMC05X117MywzMn0kEk0KC3Bl",
            "cm1pc3Npb25zGAMgAygLMjguaW1wcm9iYWJsZS5zcGF0aWFsb3Muc2Vydmlj",
            "ZWFjY291bnQudjFhbHBoYTEuUGVybWlzc2lvbhINCgV0b2tlbhgEIAEoCRIx",
            "Cg1jcmVhdGlvbl90aW1lGAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVz",
            "dGFtcBIzCg9leHBpcmF0aW9uX3RpbWUYBiABKAsyGi5nb29nbGUucHJvdG9i",
            "dWYuVGltZXN0YW1wIoECChtDcmVhdGVTZXJ2aWNlQWNjb3VudFJlcXVlc3QS",
            "KgoEbmFtZRgBIAEoCUIc4t8fGAoUXlthLXpBLVowLTlfXXs1LDY0fSQgARIy",
            "Cgxwcm9qZWN0X25hbWUYAyABKAlCHOLfHxgKFF5bYS16QS1aMC05X117Mywz",
            "Mn0kIAESVQoLcGVybWlzc2lvbnMYBCADKAsyOC5pbXByb2JhYmxlLnNwYXRp",
            "YWxvcy5zZXJ2aWNlYWNjb3VudC52MWFscGhhMS5QZXJtaXNzaW9uQgbi3x8C",
            "IAESKwoIbGlmZXRpbWUYAiABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRp",
            "b24iiAEKGkxpc3RTZXJ2aWNlQWNjb3VudHNSZXF1ZXN0EjIKDHByb2plY3Rf",
            "bmFtZRgDIAEoCUIc4t8fGAoUXlthLXpBLVowLTlfXXszLDMyfSQgARIiCglw",
            "YWdlX3NpemUYASABKAVCD+LfHwsQ////////////ARISCgpwYWdlX3Rva2Vu",
            "GAIgASgJIo4BChtMaXN0U2VydmljZUFjY291bnRzUmVzcG9uc2USVgoQc2Vy",
            "dmljZV9hY2NvdW50cxgBIAMoCzI8LmltcHJvYmFibGUuc3BhdGlhbG9zLnNl",
            "cnZpY2VhY2NvdW50LnYxYWxwaGExLlNlcnZpY2VBY2NvdW50EhcKD25leHRf",
            "cGFnZV90b2tlbhgCIAEoCSK1AQobVXBkYXRlU2VydmljZUFjY291bnRSZXF1",
            "ZXN0EhIKAmlkGAEgASgDQgbi3x8CIAESTQoLcGVybWlzc2lvbnMYAiADKAsy",
            "OC5pbXByb2JhYmxlLnNwYXRpYWxvcy5zZXJ2aWNlYWNjb3VudC52MWFscGhh",
            "MS5QZXJtaXNzaW9uEjMKD2V4cGlyYXRpb25fdGltZRgDIAEoCzIaLmdvb2ds",
            "ZS5wcm90b2J1Zi5UaW1lc3RhbXAiMQobRGVsZXRlU2VydmljZUFjY291bnRS",
            "ZXF1ZXN0EhIKAmlkGAEgASgDQgbi3x8CIAEygwUKFVNlcnZpY2VBY2NvdW50",
            "U2VydmljZRKfAQoUQ3JlYXRlU2VydmljZUFjY291bnQSSS5pbXByb2JhYmxl",
            "LnNwYXRpYWxvcy5zZXJ2aWNlYWNjb3VudC52MWFscGhhMS5DcmVhdGVTZXJ2",
            "aWNlQWNjb3VudFJlcXVlc3QaPC5pbXByb2JhYmxlLnNwYXRpYWxvcy5zZXJ2",
            "aWNlYWNjb3VudC52MWFscGhhMS5TZXJ2aWNlQWNjb3VudBKqAQoTTGlzdFNl",
            "cnZpY2VBY2NvdW50cxJILmltcHJvYmFibGUuc3BhdGlhbG9zLnNlcnZpY2Vh",
            "Y2NvdW50LnYxYWxwaGExLkxpc3RTZXJ2aWNlQWNjb3VudHNSZXF1ZXN0Gkku",
            "aW1wcm9iYWJsZS5zcGF0aWFsb3Muc2VydmljZWFjY291bnQudjFhbHBoYTEu",
            "TGlzdFNlcnZpY2VBY2NvdW50c1Jlc3BvbnNlEp8BChRVcGRhdGVTZXJ2aWNl",
            "QWNjb3VudBJJLmltcHJvYmFibGUuc3BhdGlhbG9zLnNlcnZpY2VhY2NvdW50",
            "LnYxYWxwaGExLlVwZGF0ZVNlcnZpY2VBY2NvdW50UmVxdWVzdBo8LmltcHJv",
            "YmFibGUuc3BhdGlhbG9zLnNlcnZpY2VhY2NvdW50LnYxYWxwaGExLlNlcnZp",
            "Y2VBY2NvdW50EnkKFERlbGV0ZVNlcnZpY2VBY2NvdW50EkkuaW1wcm9iYWJs",
            "ZS5zcGF0aWFsb3Muc2VydmljZWFjY291bnQudjFhbHBoYTEuRGVsZXRlU2Vy",
            "dmljZUFjY291bnRSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5Qmxa",
            "O2ltcHJvYmFibGUvc3BhdGlhbG9zL3NlcnZpY2VhY2NvdW50L3YxYWxwaGEx",
            "O3NlcnZpY2VhY2NvdW50qgIsSW1wcm9iYWJsZS5TcGF0aWFsT1MuU2Vydmlj",
            "ZUFjY291bnQuVjFBbHBoYTFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Validator.ValidatorReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.Permission), global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.Permission.Parser, new[]{ "Verbs", "Parts" }, null, new[]{ typeof(global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.Permission.Types.Verb) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.ServiceAccount), global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.ServiceAccount.Parser, new[]{ "Id", "Name", "ProjectName", "Permissions", "Token", "CreationTime", "ExpirationTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.CreateServiceAccountRequest), global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.CreateServiceAccountRequest.Parser, new[]{ "Name", "ProjectName", "Permissions", "Lifetime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.ListServiceAccountsRequest), global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.ListServiceAccountsRequest.Parser, new[]{ "ProjectName", "PageSize", "PageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.ListServiceAccountsResponse), global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.ListServiceAccountsResponse.Parser, new[]{ "ServiceAccounts", "NextPageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.UpdateServiceAccountRequest), global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.UpdateServiceAccountRequest.Parser, new[]{ "Id", "Permissions", "ExpirationTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.DeleteServiceAccountRequest), global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.DeleteServiceAccountRequest.Parser, new[]{ "Id" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// EXAMPLE:  For the permission, [r,w]:prj/gamex
  /// [r,w]     represented by READ, WRITE    VERBs
  /// prj/gamex represented by "prj", "gamex" PARTs
  /// </summary>
  public sealed partial class Permission : pb::IMessage<Permission> {
    private static readonly pb::MessageParser<Permission> _parser = new pb::MessageParser<Permission>(() => new Permission());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Permission> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.ServiceaccountReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Permission() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Permission(Permission other) : this() {
      verbs_ = other.verbs_.Clone();
      parts_ = other.parts_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Permission Clone() {
      return new Permission(this);
    }

    /// <summary>Field number for the "verbs" field.</summary>
    public const int VerbsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.Permission.Types.Verb> _repeated_verbs_codec
        = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.Permission.Types.Verb) x);
    private readonly pbc::RepeatedField<global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.Permission.Types.Verb> verbs_ = new pbc::RepeatedField<global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.Permission.Types.Verb>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.Permission.Types.Verb> Verbs {
      get { return verbs_; }
    }

    /// <summary>Field number for the "parts" field.</summary>
    public const int PartsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_parts_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> parts_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Parts {
      get { return parts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Permission);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Permission other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!verbs_.Equals(other.verbs_)) return false;
      if(!parts_.Equals(other.parts_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= verbs_.GetHashCode();
      hash ^= parts_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      verbs_.WriteTo(output, _repeated_verbs_codec);
      parts_.WriteTo(output, _repeated_parts_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += verbs_.CalculateSize(_repeated_verbs_codec);
      size += parts_.CalculateSize(_repeated_parts_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Permission other) {
      if (other == null) {
        return;
      }
      verbs_.Add(other.verbs_);
      parts_.Add(other.parts_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 8: {
            verbs_.AddEntriesFrom(input, _repeated_verbs_codec);
            break;
          }
          case 18: {
            parts_.AddEntriesFrom(input, _repeated_parts_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Permission message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Verb {
        [pbr::OriginalName("UNKNOWN_VERB")] UnknownVerb = 0,
        [pbr::OriginalName("READ")] Read = 1,
        [pbr::OriginalName("WRITE")] Write = 2,
        [pbr::OriginalName("GRANT")] Grant = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// A representation of service account containing the information required to display them to a user.
  /// </summary>
  public sealed partial class ServiceAccount : pb::IMessage<ServiceAccount> {
    private static readonly pb::MessageParser<ServiceAccount> _parser = new pb::MessageParser<ServiceAccount>(() => new ServiceAccount());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServiceAccount> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.ServiceaccountReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceAccount() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceAccount(ServiceAccount other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      projectName_ = other.projectName_;
      permissions_ = other.permissions_.Clone();
      token_ = other.token_;
      CreationTime = other.creationTime_ != null ? other.CreationTime.Clone() : null;
      ExpirationTime = other.expirationTime_ != null ? other.ExpirationTime.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceAccount Clone() {
      return new ServiceAccount(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    /// <summary>
    /// The unique service account id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// The name of the service account.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "project_name" field.</summary>
    public const int ProjectNameFieldNumber = 7;
    private string projectName_ = "";
    /// <summary>
    /// The name of the project associated with the service account.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectName {
      get { return projectName_; }
      set {
        projectName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "permissions" field.</summary>
    public const int PermissionsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.Permission> _repeated_permissions_codec
        = pb::FieldCodec.ForMessage(26, global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.Permission.Parser);
    private readonly pbc::RepeatedField<global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.Permission> permissions_ = new pbc::RepeatedField<global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.Permission>();
    /// <summary>
    /// The service account's scope, as `Permission`s.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.Permission> Permissions {
      get { return permissions_; }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 4;
    private string token_ = "";
    /// <summary>
    /// A refresh token representing the created service account.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "creation_time" field.</summary>
    public const int CreationTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp creationTime_;
    /// <summary>
    /// Creation and expiration time of the service account token. Expiration time optional, if non-expiring.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreationTime {
      get { return creationTime_; }
      set {
        creationTime_ = value;
      }
    }

    /// <summary>Field number for the "expiration_time" field.</summary>
    public const int ExpirationTimeFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expirationTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ExpirationTime {
      get { return expirationTime_; }
      set {
        expirationTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServiceAccount);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServiceAccount other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (ProjectName != other.ProjectName) return false;
      if(!permissions_.Equals(other.permissions_)) return false;
      if (Token != other.Token) return false;
      if (!object.Equals(CreationTime, other.CreationTime)) return false;
      if (!object.Equals(ExpirationTime, other.ExpirationTime)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ProjectName.Length != 0) hash ^= ProjectName.GetHashCode();
      hash ^= permissions_.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (creationTime_ != null) hash ^= CreationTime.GetHashCode();
      if (expirationTime_ != null) hash ^= ExpirationTime.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      permissions_.WriteTo(output, _repeated_permissions_codec);
      if (Token.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Token);
      }
      if (creationTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CreationTime);
      }
      if (expirationTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ExpirationTime);
      }
      if (ProjectName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ProjectName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ProjectName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectName);
      }
      size += permissions_.CalculateSize(_repeated_permissions_codec);
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (creationTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreationTime);
      }
      if (expirationTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpirationTime);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServiceAccount other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ProjectName.Length != 0) {
        ProjectName = other.ProjectName;
      }
      permissions_.Add(other.permissions_);
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      if (other.creationTime_ != null) {
        if (creationTime_ == null) {
          creationTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreationTime.MergeFrom(other.CreationTime);
      }
      if (other.expirationTime_ != null) {
        if (expirationTime_ == null) {
          expirationTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ExpirationTime.MergeFrom(other.ExpirationTime);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            permissions_.AddEntriesFrom(input, _repeated_permissions_codec);
            break;
          }
          case 34: {
            Token = input.ReadString();
            break;
          }
          case 42: {
            if (creationTime_ == null) {
              creationTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(creationTime_);
            break;
          }
          case 50: {
            if (expirationTime_ == null) {
              expirationTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(expirationTime_);
            break;
          }
          case 58: {
            ProjectName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A request to create a new service account.
  /// </summary>
  public sealed partial class CreateServiceAccountRequest : pb::IMessage<CreateServiceAccountRequest> {
    private static readonly pb::MessageParser<CreateServiceAccountRequest> _parser = new pb::MessageParser<CreateServiceAccountRequest>(() => new CreateServiceAccountRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateServiceAccountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.ServiceaccountReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateServiceAccountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateServiceAccountRequest(CreateServiceAccountRequest other) : this() {
      name_ = other.name_;
      projectName_ = other.projectName_;
      permissions_ = other.permissions_.Clone();
      Lifetime = other.lifetime_ != null ? other.Lifetime.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateServiceAccountRequest Clone() {
      return new CreateServiceAccountRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the service account.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "project_name" field.</summary>
    public const int ProjectNameFieldNumber = 3;
    private string projectName_ = "";
    /// <summary>
    /// The name of the project associated with the service account.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectName {
      get { return projectName_; }
      set {
        projectName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "permissions" field.</summary>
    public const int PermissionsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.Permission> _repeated_permissions_codec
        = pb::FieldCodec.ForMessage(34, global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.Permission.Parser);
    private readonly pbc::RepeatedField<global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.Permission> permissions_ = new pbc::RepeatedField<global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.Permission>();
    /// <summary>
    /// The service account's scope.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.Permission> Permissions {
      get { return permissions_; }
    }

    /// <summary>Field number for the "lifetime" field.</summary>
    public const int LifetimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Duration lifetime_;
    /// <summary>
    /// The lifetime of the service account. If not specified, then the new service account
    /// will have a default lifetime of 30 days. This value cannot be larger than 90 days.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration Lifetime {
      get { return lifetime_; }
      set {
        lifetime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateServiceAccountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateServiceAccountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (ProjectName != other.ProjectName) return false;
      if(!permissions_.Equals(other.permissions_)) return false;
      if (!object.Equals(Lifetime, other.Lifetime)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ProjectName.Length != 0) hash ^= ProjectName.GetHashCode();
      hash ^= permissions_.GetHashCode();
      if (lifetime_ != null) hash ^= Lifetime.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (lifetime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Lifetime);
      }
      if (ProjectName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ProjectName);
      }
      permissions_.WriteTo(output, _repeated_permissions_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ProjectName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectName);
      }
      size += permissions_.CalculateSize(_repeated_permissions_codec);
      if (lifetime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Lifetime);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateServiceAccountRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ProjectName.Length != 0) {
        ProjectName = other.ProjectName;
      }
      permissions_.Add(other.permissions_);
      if (other.lifetime_ != null) {
        if (lifetime_ == null) {
          lifetime_ = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        Lifetime.MergeFrom(other.Lifetime);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (lifetime_ == null) {
              lifetime_ = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(lifetime_);
            break;
          }
          case 26: {
            ProjectName = input.ReadString();
            break;
          }
          case 34: {
            permissions_.AddEntriesFrom(input, _repeated_permissions_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A request used to list all the service accounts you have permission to view.
  /// </summary>
  public sealed partial class ListServiceAccountsRequest : pb::IMessage<ListServiceAccountsRequest> {
    private static readonly pb::MessageParser<ListServiceAccountsRequest> _parser = new pb::MessageParser<ListServiceAccountsRequest>(() => new ListServiceAccountsRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListServiceAccountsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.ServiceaccountReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListServiceAccountsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListServiceAccountsRequest(ListServiceAccountsRequest other) : this() {
      projectName_ = other.projectName_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListServiceAccountsRequest Clone() {
      return new ListServiceAccountsRequest(this);
    }

    /// <summary>Field number for the "project_name" field.</summary>
    public const int ProjectNameFieldNumber = 3;
    private string projectName_ = "";
    /// <summary>
    /// The name of the project whose service accounts should be listed. You must have access to this project.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectName {
      get { return projectName_; }
      set {
        projectName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 1;
    private int pageSize_;
    /// <summary>
    /// The maximum number of service accounts to return in the response.
    /// If unspecified this will be 20 results per page.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 2;
    private string pageToken_ = "";
    /// <summary>
    /// The token to identify the starting point of the request.
    /// An empty or invalid token defaults to listing from the start.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListServiceAccountsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListServiceAccountsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectName != other.ProjectName) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectName.Length != 0) hash ^= ProjectName.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PageSize != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PageToken);
      }
      if (ProjectName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ProjectName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectName);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListServiceAccountsRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectName.Length != 0) {
        ProjectName = other.ProjectName;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            PageSize = input.ReadInt32();
            break;
          }
          case 18: {
            PageToken = input.ReadString();
            break;
          }
          case 26: {
            ProjectName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListServiceAccountsResponse : pb::IMessage<ListServiceAccountsResponse> {
    private static readonly pb::MessageParser<ListServiceAccountsResponse> _parser = new pb::MessageParser<ListServiceAccountsResponse>(() => new ListServiceAccountsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListServiceAccountsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.ServiceaccountReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListServiceAccountsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListServiceAccountsResponse(ListServiceAccountsResponse other) : this() {
      serviceAccounts_ = other.serviceAccounts_.Clone();
      nextPageToken_ = other.nextPageToken_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListServiceAccountsResponse Clone() {
      return new ListServiceAccountsResponse(this);
    }

    /// <summary>Field number for the "service_accounts" field.</summary>
    public const int ServiceAccountsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.ServiceAccount> _repeated_serviceAccounts_codec
        = pb::FieldCodec.ForMessage(10, global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.ServiceAccount.Parser);
    private readonly pbc::RepeatedField<global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.ServiceAccount> serviceAccounts_ = new pbc::RepeatedField<global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.ServiceAccount>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.ServiceAccount> ServiceAccounts {
      get { return serviceAccounts_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// A token you can supply to the ListDeployments RPC to retrieve the next page of
    /// paginated results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListServiceAccountsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListServiceAccountsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!serviceAccounts_.Equals(other.serviceAccounts_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= serviceAccounts_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      serviceAccounts_.WriteTo(output, _repeated_serviceAccounts_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += serviceAccounts_.CalculateSize(_repeated_serviceAccounts_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListServiceAccountsResponse other) {
      if (other == null) {
        return;
      }
      serviceAccounts_.Add(other.serviceAccounts_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            serviceAccounts_.AddEntriesFrom(input, _repeated_serviceAccounts_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateServiceAccountRequest : pb::IMessage<UpdateServiceAccountRequest> {
    private static readonly pb::MessageParser<UpdateServiceAccountRequest> _parser = new pb::MessageParser<UpdateServiceAccountRequest>(() => new UpdateServiceAccountRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateServiceAccountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.ServiceaccountReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateServiceAccountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateServiceAccountRequest(UpdateServiceAccountRequest other) : this() {
      id_ = other.id_;
      permissions_ = other.permissions_.Clone();
      ExpirationTime = other.expirationTime_ != null ? other.ExpirationTime.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateServiceAccountRequest Clone() {
      return new UpdateServiceAccountRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    /// <summary>
    /// The ID of the service account which is to be updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "permissions" field.</summary>
    public const int PermissionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.Permission> _repeated_permissions_codec
        = pb::FieldCodec.ForMessage(18, global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.Permission.Parser);
    private readonly pbc::RepeatedField<global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.Permission> permissions_ = new pbc::RepeatedField<global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.Permission>();
    /// <summary>
    /// An updated set of grants for the service account.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.Permission> Permissions {
      get { return permissions_; }
    }

    /// <summary>Field number for the "expiration_time" field.</summary>
    public const int ExpirationTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expirationTime_;
    /// <summary>
    /// An updated expiration time for the account. This cannot be more than 90 days in the future.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ExpirationTime {
      get { return expirationTime_; }
      set {
        expirationTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateServiceAccountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateServiceAccountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!permissions_.Equals(other.permissions_)) return false;
      if (!object.Equals(ExpirationTime, other.ExpirationTime)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      hash ^= permissions_.GetHashCode();
      if (expirationTime_ != null) hash ^= ExpirationTime.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      permissions_.WriteTo(output, _repeated_permissions_codec);
      if (expirationTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ExpirationTime);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      size += permissions_.CalculateSize(_repeated_permissions_codec);
      if (expirationTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpirationTime);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateServiceAccountRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      permissions_.Add(other.permissions_);
      if (other.expirationTime_ != null) {
        if (expirationTime_ == null) {
          expirationTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ExpirationTime.MergeFrom(other.ExpirationTime);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            permissions_.AddEntriesFrom(input, _repeated_permissions_codec);
            break;
          }
          case 26: {
            if (expirationTime_ == null) {
              expirationTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(expirationTime_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteServiceAccountRequest : pb::IMessage<DeleteServiceAccountRequest> {
    private static readonly pb::MessageParser<DeleteServiceAccountRequest> _parser = new pb::MessageParser<DeleteServiceAccountRequest>(() => new DeleteServiceAccountRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteServiceAccountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Improbable.SpatialOS.ServiceAccount.V1Alpha1.ServiceaccountReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteServiceAccountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteServiceAccountRequest(DeleteServiceAccountRequest other) : this() {
      id_ = other.id_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteServiceAccountRequest Clone() {
      return new DeleteServiceAccountRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    /// <summary>
    /// ID of the service account to delete.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteServiceAccountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteServiceAccountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteServiceAccountRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
