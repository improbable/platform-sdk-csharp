// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/improbable/spatialos/deployment/v1beta1/deployment.proto
// Original file comments:
// Provides methods to create, access and modify deployments.
//
#pragma warning disable 1591
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace Improbable.SpatialOS.Deployment.V1Beta1 {
  /// <summary>
  /// DeploymentService provides methods for managing deployments.
  /// </summary>
  public static partial class DeploymentService
  {
    static readonly string __ServiceName = "improbable.spatialos.deployment.v1beta1.DeploymentService";

    static readonly grpc::Marshaller<global::Improbable.SpatialOS.Deployment.V1Beta1.CreateDeploymentRequest> __Marshaller_CreateDeploymentRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.SpatialOS.Deployment.V1Beta1.CreateDeploymentRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_Operation = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.LongRunning.Operation.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.SpatialOS.Deployment.V1Beta1.DeleteDeploymentRequest> __Marshaller_DeleteDeploymentRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.SpatialOS.Deployment.V1Beta1.DeleteDeploymentRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.SpatialOS.Deployment.V1Beta1.RestartDeploymentRequest> __Marshaller_RestartDeploymentRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.SpatialOS.Deployment.V1Beta1.RestartDeploymentRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.SpatialOS.Deployment.V1Beta1.ListDeploymentsRequest> __Marshaller_ListDeploymentsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.SpatialOS.Deployment.V1Beta1.ListDeploymentsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.SpatialOS.Deployment.V1Beta1.ListDeploymentsResponse> __Marshaller_ListDeploymentsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.SpatialOS.Deployment.V1Beta1.ListDeploymentsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.SpatialOS.Deployment.V1Beta1.GetDeploymentRequest> __Marshaller_GetDeploymentRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.SpatialOS.Deployment.V1Beta1.GetDeploymentRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.SpatialOS.Deployment.V1Beta1.GetDeploymentResponse> __Marshaller_GetDeploymentResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.SpatialOS.Deployment.V1Beta1.GetDeploymentResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.SpatialOS.Deployment.V1Beta1.GetRunningDeploymentByNameRequest> __Marshaller_GetRunningDeploymentByNameRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.SpatialOS.Deployment.V1Beta1.GetRunningDeploymentByNameRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerFlagsRequest> __Marshaller_SetDeploymentWorkerFlagsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerFlagsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerFlagsResponse> __Marshaller_SetDeploymentWorkerFlagsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerFlagsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentTagsRequest> __Marshaller_SetDeploymentTagsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentTagsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentTagsResponse> __Marshaller_SetDeploymentTagsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentTagsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerCapacitiesRequest> __Marshaller_SetDeploymentWorkerCapacitiesRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerCapacitiesRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerCapacitiesResponse> __Marshaller_SetDeploymentWorkerCapacitiesResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerCapacitiesResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerRateLimitsRequest> __Marshaller_SetDeploymentWorkerRateLimitsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerRateLimitsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerRateLimitsResponse> __Marshaller_SetDeploymentWorkerRateLimitsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerRateLimitsResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Improbable.SpatialOS.Deployment.V1Beta1.CreateDeploymentRequest, global::Google.LongRunning.Operation> __Method_CreateDeployment = new grpc::Method<global::Improbable.SpatialOS.Deployment.V1Beta1.CreateDeploymentRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateDeployment",
        __Marshaller_CreateDeploymentRequest,
        __Marshaller_Operation);

    static readonly grpc::Method<global::Improbable.SpatialOS.Deployment.V1Beta1.DeleteDeploymentRequest, global::Google.LongRunning.Operation> __Method_DeleteDeployment = new grpc::Method<global::Improbable.SpatialOS.Deployment.V1Beta1.DeleteDeploymentRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteDeployment",
        __Marshaller_DeleteDeploymentRequest,
        __Marshaller_Operation);

    static readonly grpc::Method<global::Improbable.SpatialOS.Deployment.V1Beta1.RestartDeploymentRequest, global::Google.LongRunning.Operation> __Method_RestartDeployment = new grpc::Method<global::Improbable.SpatialOS.Deployment.V1Beta1.RestartDeploymentRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RestartDeployment",
        __Marshaller_RestartDeploymentRequest,
        __Marshaller_Operation);

    static readonly grpc::Method<global::Improbable.SpatialOS.Deployment.V1Beta1.ListDeploymentsRequest, global::Improbable.SpatialOS.Deployment.V1Beta1.ListDeploymentsResponse> __Method_ListDeployments = new grpc::Method<global::Improbable.SpatialOS.Deployment.V1Beta1.ListDeploymentsRequest, global::Improbable.SpatialOS.Deployment.V1Beta1.ListDeploymentsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListDeployments",
        __Marshaller_ListDeploymentsRequest,
        __Marshaller_ListDeploymentsResponse);

    static readonly grpc::Method<global::Improbable.SpatialOS.Deployment.V1Beta1.GetDeploymentRequest, global::Improbable.SpatialOS.Deployment.V1Beta1.GetDeploymentResponse> __Method_GetDeployment = new grpc::Method<global::Improbable.SpatialOS.Deployment.V1Beta1.GetDeploymentRequest, global::Improbable.SpatialOS.Deployment.V1Beta1.GetDeploymentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDeployment",
        __Marshaller_GetDeploymentRequest,
        __Marshaller_GetDeploymentResponse);

    static readonly grpc::Method<global::Improbable.SpatialOS.Deployment.V1Beta1.GetRunningDeploymentByNameRequest, global::Improbable.SpatialOS.Deployment.V1Beta1.GetDeploymentResponse> __Method_GetRunningDeploymentByName = new grpc::Method<global::Improbable.SpatialOS.Deployment.V1Beta1.GetRunningDeploymentByNameRequest, global::Improbable.SpatialOS.Deployment.V1Beta1.GetDeploymentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRunningDeploymentByName",
        __Marshaller_GetRunningDeploymentByNameRequest,
        __Marshaller_GetDeploymentResponse);

    static readonly grpc::Method<global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerFlagsRequest, global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerFlagsResponse> __Method_SetDeploymentWorkerFlags = new grpc::Method<global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerFlagsRequest, global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerFlagsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetDeploymentWorkerFlags",
        __Marshaller_SetDeploymentWorkerFlagsRequest,
        __Marshaller_SetDeploymentWorkerFlagsResponse);

    static readonly grpc::Method<global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentTagsRequest, global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentTagsResponse> __Method_SetDeploymentTags = new grpc::Method<global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentTagsRequest, global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentTagsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetDeploymentTags",
        __Marshaller_SetDeploymentTagsRequest,
        __Marshaller_SetDeploymentTagsResponse);

    static readonly grpc::Method<global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerCapacitiesRequest, global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerCapacitiesResponse> __Method_SetDeploymentWorkerCapacities = new grpc::Method<global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerCapacitiesRequest, global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerCapacitiesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetDeploymentWorkerCapacities",
        __Marshaller_SetDeploymentWorkerCapacitiesRequest,
        __Marshaller_SetDeploymentWorkerCapacitiesResponse);

    static readonly grpc::Method<global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerRateLimitsRequest, global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerRateLimitsResponse> __Method_SetDeploymentWorkerRateLimits = new grpc::Method<global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerRateLimitsRequest, global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerRateLimitsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetDeploymentWorkerRateLimits",
        __Marshaller_SetDeploymentWorkerRateLimitsRequest,
        __Marshaller_SetDeploymentWorkerRateLimitsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Improbable.SpatialOS.Deployment.V1Beta1.DeploymentReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of DeploymentService</summary>
    public abstract partial class DeploymentServiceBase
    {
      /// <summary>
      /// Creates a deployment.
      ///
      /// The returned operation result is of type `Deployment` upon successful creation.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateDeployment(global::Improbable.SpatialOS.Deployment.V1Beta1.CreateDeploymentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a deployment.
      ///
      /// The returned operation result is of type `DeleteDeploymentResponse` upon successful deletion.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteDeployment(global::Improbable.SpatialOS.Deployment.V1Beta1.DeleteDeploymentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Restarts a deployment.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> RestartDeployment(global::Improbable.SpatialOS.Deployment.V1Beta1.RestartDeploymentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists deployments under a given project.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Improbable.SpatialOS.Deployment.V1Beta1.ListDeploymentsResponse> ListDeployments(global::Improbable.SpatialOS.Deployment.V1Beta1.ListDeploymentsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a deployment as identified by `id`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Improbable.SpatialOS.Deployment.V1Beta1.GetDeploymentResponse> GetDeployment(global::Improbable.SpatialOS.Deployment.V1Beta1.GetDeploymentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a deployment as identified by `name`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Improbable.SpatialOS.Deployment.V1Beta1.GetDeploymentResponse> GetRunningDeploymentByName(global::Improbable.SpatialOS.Deployment.V1Beta1.GetRunningDeploymentByNameRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// SetDeploymentWorkerFlags sets the worker flags on a deployment as identified by the `deployment_id`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerFlagsResponse> SetDeploymentWorkerFlags(global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerFlagsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// SetDeploymentTags sets the tags on a deployment as identified by the `deployment_id`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentTagsResponse> SetDeploymentTags(global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentTagsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// SetDeploymentWorkerCapacities sets the worker capacities on a deployment as identified by the `deployment_id`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerCapacitiesResponse> SetDeploymentWorkerCapacities(global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerCapacitiesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// SetDeploymentWorkerRateLimits sets the worker rate limits on a deployment as identified by the `deployment_id`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerRateLimitsResponse> SetDeploymentWorkerRateLimits(global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerRateLimitsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for DeploymentService</summary>
    public partial class DeploymentServiceClient : grpc::ClientBase<DeploymentServiceClient>
    {
      /// <summary>Creates a new client for DeploymentService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public DeploymentServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for DeploymentService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public DeploymentServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected DeploymentServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected DeploymentServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Creates a deployment.
      ///
      /// The returned operation result is of type `Deployment` upon successful creation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.LongRunning.Operation CreateDeployment(global::Improbable.SpatialOS.Deployment.V1Beta1.CreateDeploymentRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateDeployment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a deployment.
      ///
      /// The returned operation result is of type `Deployment` upon successful creation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.LongRunning.Operation CreateDeployment(global::Improbable.SpatialOS.Deployment.V1Beta1.CreateDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateDeployment, null, options, request);
      }
      /// <summary>
      /// Creates a deployment.
      ///
      /// The returned operation result is of type `Deployment` upon successful creation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateDeploymentAsync(global::Improbable.SpatialOS.Deployment.V1Beta1.CreateDeploymentRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateDeploymentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a deployment.
      ///
      /// The returned operation result is of type `Deployment` upon successful creation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateDeploymentAsync(global::Improbable.SpatialOS.Deployment.V1Beta1.CreateDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateDeployment, null, options, request);
      }
      /// <summary>
      /// Deletes a deployment.
      ///
      /// The returned operation result is of type `DeleteDeploymentResponse` upon successful deletion.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.LongRunning.Operation DeleteDeployment(global::Improbable.SpatialOS.Deployment.V1Beta1.DeleteDeploymentRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteDeployment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a deployment.
      ///
      /// The returned operation result is of type `DeleteDeploymentResponse` upon successful deletion.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.LongRunning.Operation DeleteDeployment(global::Improbable.SpatialOS.Deployment.V1Beta1.DeleteDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteDeployment, null, options, request);
      }
      /// <summary>
      /// Deletes a deployment.
      ///
      /// The returned operation result is of type `DeleteDeploymentResponse` upon successful deletion.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteDeploymentAsync(global::Improbable.SpatialOS.Deployment.V1Beta1.DeleteDeploymentRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteDeploymentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a deployment.
      ///
      /// The returned operation result is of type `DeleteDeploymentResponse` upon successful deletion.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteDeploymentAsync(global::Improbable.SpatialOS.Deployment.V1Beta1.DeleteDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteDeployment, null, options, request);
      }
      /// <summary>
      ///  Restarts a deployment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.LongRunning.Operation RestartDeployment(global::Improbable.SpatialOS.Deployment.V1Beta1.RestartDeploymentRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RestartDeployment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Restarts a deployment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.LongRunning.Operation RestartDeployment(global::Improbable.SpatialOS.Deployment.V1Beta1.RestartDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RestartDeployment, null, options, request);
      }
      /// <summary>
      ///  Restarts a deployment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> RestartDeploymentAsync(global::Improbable.SpatialOS.Deployment.V1Beta1.RestartDeploymentRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RestartDeploymentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Restarts a deployment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> RestartDeploymentAsync(global::Improbable.SpatialOS.Deployment.V1Beta1.RestartDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RestartDeployment, null, options, request);
      }
      /// <summary>
      /// Lists deployments under a given project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Improbable.SpatialOS.Deployment.V1Beta1.ListDeploymentsResponse ListDeployments(global::Improbable.SpatialOS.Deployment.V1Beta1.ListDeploymentsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListDeployments(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists deployments under a given project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Improbable.SpatialOS.Deployment.V1Beta1.ListDeploymentsResponse ListDeployments(global::Improbable.SpatialOS.Deployment.V1Beta1.ListDeploymentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListDeployments, null, options, request);
      }
      /// <summary>
      /// Lists deployments under a given project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Improbable.SpatialOS.Deployment.V1Beta1.ListDeploymentsResponse> ListDeploymentsAsync(global::Improbable.SpatialOS.Deployment.V1Beta1.ListDeploymentsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListDeploymentsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists deployments under a given project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Improbable.SpatialOS.Deployment.V1Beta1.ListDeploymentsResponse> ListDeploymentsAsync(global::Improbable.SpatialOS.Deployment.V1Beta1.ListDeploymentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListDeployments, null, options, request);
      }
      /// <summary>
      /// Gets a deployment as identified by `id`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Improbable.SpatialOS.Deployment.V1Beta1.GetDeploymentResponse GetDeployment(global::Improbable.SpatialOS.Deployment.V1Beta1.GetDeploymentRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetDeployment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a deployment as identified by `id`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Improbable.SpatialOS.Deployment.V1Beta1.GetDeploymentResponse GetDeployment(global::Improbable.SpatialOS.Deployment.V1Beta1.GetDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDeployment, null, options, request);
      }
      /// <summary>
      /// Gets a deployment as identified by `id`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Improbable.SpatialOS.Deployment.V1Beta1.GetDeploymentResponse> GetDeploymentAsync(global::Improbable.SpatialOS.Deployment.V1Beta1.GetDeploymentRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetDeploymentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a deployment as identified by `id`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Improbable.SpatialOS.Deployment.V1Beta1.GetDeploymentResponse> GetDeploymentAsync(global::Improbable.SpatialOS.Deployment.V1Beta1.GetDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDeployment, null, options, request);
      }
      /// <summary>
      /// Gets a deployment as identified by `name`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Improbable.SpatialOS.Deployment.V1Beta1.GetDeploymentResponse GetRunningDeploymentByName(global::Improbable.SpatialOS.Deployment.V1Beta1.GetRunningDeploymentByNameRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetRunningDeploymentByName(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a deployment as identified by `name`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Improbable.SpatialOS.Deployment.V1Beta1.GetDeploymentResponse GetRunningDeploymentByName(global::Improbable.SpatialOS.Deployment.V1Beta1.GetRunningDeploymentByNameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRunningDeploymentByName, null, options, request);
      }
      /// <summary>
      /// Gets a deployment as identified by `name`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Improbable.SpatialOS.Deployment.V1Beta1.GetDeploymentResponse> GetRunningDeploymentByNameAsync(global::Improbable.SpatialOS.Deployment.V1Beta1.GetRunningDeploymentByNameRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetRunningDeploymentByNameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a deployment as identified by `name`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Improbable.SpatialOS.Deployment.V1Beta1.GetDeploymentResponse> GetRunningDeploymentByNameAsync(global::Improbable.SpatialOS.Deployment.V1Beta1.GetRunningDeploymentByNameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRunningDeploymentByName, null, options, request);
      }
      /// <summary>
      /// SetDeploymentWorkerFlags sets the worker flags on a deployment as identified by the `deployment_id`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerFlagsResponse SetDeploymentWorkerFlags(global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerFlagsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SetDeploymentWorkerFlags(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// SetDeploymentWorkerFlags sets the worker flags on a deployment as identified by the `deployment_id`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerFlagsResponse SetDeploymentWorkerFlags(global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerFlagsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetDeploymentWorkerFlags, null, options, request);
      }
      /// <summary>
      /// SetDeploymentWorkerFlags sets the worker flags on a deployment as identified by the `deployment_id`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerFlagsResponse> SetDeploymentWorkerFlagsAsync(global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerFlagsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SetDeploymentWorkerFlagsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// SetDeploymentWorkerFlags sets the worker flags on a deployment as identified by the `deployment_id`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerFlagsResponse> SetDeploymentWorkerFlagsAsync(global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerFlagsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetDeploymentWorkerFlags, null, options, request);
      }
      /// <summary>
      /// SetDeploymentTags sets the tags on a deployment as identified by the `deployment_id`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentTagsResponse SetDeploymentTags(global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentTagsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SetDeploymentTags(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// SetDeploymentTags sets the tags on a deployment as identified by the `deployment_id`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentTagsResponse SetDeploymentTags(global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentTagsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetDeploymentTags, null, options, request);
      }
      /// <summary>
      /// SetDeploymentTags sets the tags on a deployment as identified by the `deployment_id`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentTagsResponse> SetDeploymentTagsAsync(global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentTagsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SetDeploymentTagsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// SetDeploymentTags sets the tags on a deployment as identified by the `deployment_id`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentTagsResponse> SetDeploymentTagsAsync(global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentTagsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetDeploymentTags, null, options, request);
      }
      /// <summary>
      /// SetDeploymentWorkerCapacities sets the worker capacities on a deployment as identified by the `deployment_id`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerCapacitiesResponse SetDeploymentWorkerCapacities(global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerCapacitiesRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SetDeploymentWorkerCapacities(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// SetDeploymentWorkerCapacities sets the worker capacities on a deployment as identified by the `deployment_id`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerCapacitiesResponse SetDeploymentWorkerCapacities(global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerCapacitiesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetDeploymentWorkerCapacities, null, options, request);
      }
      /// <summary>
      /// SetDeploymentWorkerCapacities sets the worker capacities on a deployment as identified by the `deployment_id`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerCapacitiesResponse> SetDeploymentWorkerCapacitiesAsync(global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerCapacitiesRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SetDeploymentWorkerCapacitiesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// SetDeploymentWorkerCapacities sets the worker capacities on a deployment as identified by the `deployment_id`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerCapacitiesResponse> SetDeploymentWorkerCapacitiesAsync(global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerCapacitiesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetDeploymentWorkerCapacities, null, options, request);
      }
      /// <summary>
      /// SetDeploymentWorkerRateLimits sets the worker rate limits on a deployment as identified by the `deployment_id`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerRateLimitsResponse SetDeploymentWorkerRateLimits(global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerRateLimitsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SetDeploymentWorkerRateLimits(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// SetDeploymentWorkerRateLimits sets the worker rate limits on a deployment as identified by the `deployment_id`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerRateLimitsResponse SetDeploymentWorkerRateLimits(global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerRateLimitsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetDeploymentWorkerRateLimits, null, options, request);
      }
      /// <summary>
      /// SetDeploymentWorkerRateLimits sets the worker rate limits on a deployment as identified by the `deployment_id`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerRateLimitsResponse> SetDeploymentWorkerRateLimitsAsync(global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerRateLimitsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SetDeploymentWorkerRateLimitsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// SetDeploymentWorkerRateLimits sets the worker rate limits on a deployment as identified by the `deployment_id`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerRateLimitsResponse> SetDeploymentWorkerRateLimitsAsync(global::Improbable.SpatialOS.Deployment.V1Beta1.SetDeploymentWorkerRateLimitsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetDeploymentWorkerRateLimits, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override DeploymentServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new DeploymentServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(DeploymentServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateDeployment, serviceImpl.CreateDeployment)
          .AddMethod(__Method_DeleteDeployment, serviceImpl.DeleteDeployment)
          .AddMethod(__Method_RestartDeployment, serviceImpl.RestartDeployment)
          .AddMethod(__Method_ListDeployments, serviceImpl.ListDeployments)
          .AddMethod(__Method_GetDeployment, serviceImpl.GetDeployment)
          .AddMethod(__Method_GetRunningDeploymentByName, serviceImpl.GetRunningDeploymentByName)
          .AddMethod(__Method_SetDeploymentWorkerFlags, serviceImpl.SetDeploymentWorkerFlags)
          .AddMethod(__Method_SetDeploymentTags, serviceImpl.SetDeploymentTags)
          .AddMethod(__Method_SetDeploymentWorkerCapacities, serviceImpl.SetDeploymentWorkerCapacities)
          .AddMethod(__Method_SetDeploymentWorkerRateLimits, serviceImpl.SetDeploymentWorkerRateLimits).Build();
    }

  }
}
#endregion
