// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/improbable/spatialos/deployment/v1alpha1/deployment.proto
// Original file comments:
// Provides methods to access deployments.
//
#pragma warning disable 1591
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace Improbable.SpatialOS.Deployment.V1Alpha1 {
  /// <summary>
  /// DeploymentService provides methods for managing deployments.
  /// </summary>
  public static partial class DeploymentService
  {
    static readonly string __ServiceName = "improbable.spatialos.deployment.v1alpha1.DeploymentService";

    static readonly grpc::Marshaller<global::Improbable.SpatialOS.Deployment.V1Alpha1.ListDeploymentsRequest> __Marshaller_ListDeploymentsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.SpatialOS.Deployment.V1Alpha1.ListDeploymentsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.SpatialOS.Deployment.V1Alpha1.ListDeploymentsResponse> __Marshaller_ListDeploymentsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.SpatialOS.Deployment.V1Alpha1.ListDeploymentsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.SpatialOS.Deployment.V1Alpha1.GetDeploymentRequest> __Marshaller_GetDeploymentRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.SpatialOS.Deployment.V1Alpha1.GetDeploymentRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.SpatialOS.Deployment.V1Alpha1.GetDeploymentResponse> __Marshaller_GetDeploymentResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.SpatialOS.Deployment.V1Alpha1.GetDeploymentResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.SpatialOS.Deployment.V1Alpha1.CreateDeploymentRequest> __Marshaller_CreateDeploymentRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.SpatialOS.Deployment.V1Alpha1.CreateDeploymentRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_Operation = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.LongRunning.Operation.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.SpatialOS.Deployment.V1Alpha1.UpdateDeploymentRequest> __Marshaller_UpdateDeploymentRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.SpatialOS.Deployment.V1Alpha1.UpdateDeploymentRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.SpatialOS.Deployment.V1Alpha1.UpdateDeploymentResponse> __Marshaller_UpdateDeploymentResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.SpatialOS.Deployment.V1Alpha1.UpdateDeploymentResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.SpatialOS.Deployment.V1Alpha1.StopDeploymentRequest> __Marshaller_StopDeploymentRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.SpatialOS.Deployment.V1Alpha1.StopDeploymentRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.SpatialOS.Deployment.V1Alpha1.StopDeploymentResponse> __Marshaller_StopDeploymentResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.SpatialOS.Deployment.V1Alpha1.StopDeploymentResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Improbable.SpatialOS.Deployment.V1Alpha1.ListDeploymentsRequest, global::Improbable.SpatialOS.Deployment.V1Alpha1.ListDeploymentsResponse> __Method_ListDeployments = new grpc::Method<global::Improbable.SpatialOS.Deployment.V1Alpha1.ListDeploymentsRequest, global::Improbable.SpatialOS.Deployment.V1Alpha1.ListDeploymentsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListDeployments",
        __Marshaller_ListDeploymentsRequest,
        __Marshaller_ListDeploymentsResponse);

    static readonly grpc::Method<global::Improbable.SpatialOS.Deployment.V1Alpha1.GetDeploymentRequest, global::Improbable.SpatialOS.Deployment.V1Alpha1.GetDeploymentResponse> __Method_GetDeployment = new grpc::Method<global::Improbable.SpatialOS.Deployment.V1Alpha1.GetDeploymentRequest, global::Improbable.SpatialOS.Deployment.V1Alpha1.GetDeploymentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDeployment",
        __Marshaller_GetDeploymentRequest,
        __Marshaller_GetDeploymentResponse);

    static readonly grpc::Method<global::Improbable.SpatialOS.Deployment.V1Alpha1.CreateDeploymentRequest, global::Google.LongRunning.Operation> __Method_CreateDeployment = new grpc::Method<global::Improbable.SpatialOS.Deployment.V1Alpha1.CreateDeploymentRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateDeployment",
        __Marshaller_CreateDeploymentRequest,
        __Marshaller_Operation);

    static readonly grpc::Method<global::Improbable.SpatialOS.Deployment.V1Alpha1.UpdateDeploymentRequest, global::Improbable.SpatialOS.Deployment.V1Alpha1.UpdateDeploymentResponse> __Method_UpdateDeployment = new grpc::Method<global::Improbable.SpatialOS.Deployment.V1Alpha1.UpdateDeploymentRequest, global::Improbable.SpatialOS.Deployment.V1Alpha1.UpdateDeploymentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateDeployment",
        __Marshaller_UpdateDeploymentRequest,
        __Marshaller_UpdateDeploymentResponse);

    static readonly grpc::Method<global::Improbable.SpatialOS.Deployment.V1Alpha1.StopDeploymentRequest, global::Improbable.SpatialOS.Deployment.V1Alpha1.StopDeploymentResponse> __Method_StopDeployment = new grpc::Method<global::Improbable.SpatialOS.Deployment.V1Alpha1.StopDeploymentRequest, global::Improbable.SpatialOS.Deployment.V1Alpha1.StopDeploymentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StopDeployment",
        __Marshaller_StopDeploymentRequest,
        __Marshaller_StopDeploymentResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Improbable.SpatialOS.Deployment.V1Alpha1.DeploymentReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of DeploymentService</summary>
    public abstract partial class DeploymentServiceBase
    {
      /// <summary>
      /// Lists deployments under a given project.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Improbable.SpatialOS.Deployment.V1Alpha1.ListDeploymentsResponse> ListDeployments(global::Improbable.SpatialOS.Deployment.V1Alpha1.ListDeploymentsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a deployment as identified by `id`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Improbable.SpatialOS.Deployment.V1Alpha1.GetDeploymentResponse> GetDeployment(global::Improbable.SpatialOS.Deployment.V1Alpha1.GetDeploymentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a deployment.
      ///
      /// The returned operation result is of type `deployment` upon successful creation.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateDeployment(global::Improbable.SpatialOS.Deployment.V1Alpha1.CreateDeploymentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a deployment as identified by the deployment's `id`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Improbable.SpatialOS.Deployment.V1Alpha1.UpdateDeploymentResponse> UpdateDeployment(global::Improbable.SpatialOS.Deployment.V1Alpha1.UpdateDeploymentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Stops a running deployment.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Improbable.SpatialOS.Deployment.V1Alpha1.StopDeploymentResponse> StopDeployment(global::Improbable.SpatialOS.Deployment.V1Alpha1.StopDeploymentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for DeploymentService</summary>
    public partial class DeploymentServiceClient : grpc::ClientBase<DeploymentServiceClient>
    {
      /// <summary>Creates a new client for DeploymentService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public DeploymentServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for DeploymentService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public DeploymentServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected DeploymentServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected DeploymentServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Lists deployments under a given project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Improbable.SpatialOS.Deployment.V1Alpha1.ListDeploymentsResponse ListDeployments(global::Improbable.SpatialOS.Deployment.V1Alpha1.ListDeploymentsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListDeployments(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists deployments under a given project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Improbable.SpatialOS.Deployment.V1Alpha1.ListDeploymentsResponse ListDeployments(global::Improbable.SpatialOS.Deployment.V1Alpha1.ListDeploymentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListDeployments, null, options, request);
      }
      /// <summary>
      /// Lists deployments under a given project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Improbable.SpatialOS.Deployment.V1Alpha1.ListDeploymentsResponse> ListDeploymentsAsync(global::Improbable.SpatialOS.Deployment.V1Alpha1.ListDeploymentsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListDeploymentsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists deployments under a given project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Improbable.SpatialOS.Deployment.V1Alpha1.ListDeploymentsResponse> ListDeploymentsAsync(global::Improbable.SpatialOS.Deployment.V1Alpha1.ListDeploymentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListDeployments, null, options, request);
      }
      /// <summary>
      /// Gets a deployment as identified by `id`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Improbable.SpatialOS.Deployment.V1Alpha1.GetDeploymentResponse GetDeployment(global::Improbable.SpatialOS.Deployment.V1Alpha1.GetDeploymentRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetDeployment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a deployment as identified by `id`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Improbable.SpatialOS.Deployment.V1Alpha1.GetDeploymentResponse GetDeployment(global::Improbable.SpatialOS.Deployment.V1Alpha1.GetDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDeployment, null, options, request);
      }
      /// <summary>
      /// Gets a deployment as identified by `id`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Improbable.SpatialOS.Deployment.V1Alpha1.GetDeploymentResponse> GetDeploymentAsync(global::Improbable.SpatialOS.Deployment.V1Alpha1.GetDeploymentRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetDeploymentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a deployment as identified by `id`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Improbable.SpatialOS.Deployment.V1Alpha1.GetDeploymentResponse> GetDeploymentAsync(global::Improbable.SpatialOS.Deployment.V1Alpha1.GetDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDeployment, null, options, request);
      }
      /// <summary>
      /// Creates a deployment.
      ///
      /// The returned operation result is of type `deployment` upon successful creation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.LongRunning.Operation CreateDeployment(global::Improbable.SpatialOS.Deployment.V1Alpha1.CreateDeploymentRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateDeployment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a deployment.
      ///
      /// The returned operation result is of type `deployment` upon successful creation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.LongRunning.Operation CreateDeployment(global::Improbable.SpatialOS.Deployment.V1Alpha1.CreateDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateDeployment, null, options, request);
      }
      /// <summary>
      /// Creates a deployment.
      ///
      /// The returned operation result is of type `deployment` upon successful creation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateDeploymentAsync(global::Improbable.SpatialOS.Deployment.V1Alpha1.CreateDeploymentRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateDeploymentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a deployment.
      ///
      /// The returned operation result is of type `deployment` upon successful creation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateDeploymentAsync(global::Improbable.SpatialOS.Deployment.V1Alpha1.CreateDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateDeployment, null, options, request);
      }
      /// <summary>
      /// Updates a deployment as identified by the deployment's `id`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Improbable.SpatialOS.Deployment.V1Alpha1.UpdateDeploymentResponse UpdateDeployment(global::Improbable.SpatialOS.Deployment.V1Alpha1.UpdateDeploymentRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateDeployment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a deployment as identified by the deployment's `id`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Improbable.SpatialOS.Deployment.V1Alpha1.UpdateDeploymentResponse UpdateDeployment(global::Improbable.SpatialOS.Deployment.V1Alpha1.UpdateDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateDeployment, null, options, request);
      }
      /// <summary>
      /// Updates a deployment as identified by the deployment's `id`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Improbable.SpatialOS.Deployment.V1Alpha1.UpdateDeploymentResponse> UpdateDeploymentAsync(global::Improbable.SpatialOS.Deployment.V1Alpha1.UpdateDeploymentRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateDeploymentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a deployment as identified by the deployment's `id`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Improbable.SpatialOS.Deployment.V1Alpha1.UpdateDeploymentResponse> UpdateDeploymentAsync(global::Improbable.SpatialOS.Deployment.V1Alpha1.UpdateDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateDeployment, null, options, request);
      }
      /// <summary>
      /// Stops a running deployment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Improbable.SpatialOS.Deployment.V1Alpha1.StopDeploymentResponse StopDeployment(global::Improbable.SpatialOS.Deployment.V1Alpha1.StopDeploymentRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return StopDeployment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Stops a running deployment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Improbable.SpatialOS.Deployment.V1Alpha1.StopDeploymentResponse StopDeployment(global::Improbable.SpatialOS.Deployment.V1Alpha1.StopDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StopDeployment, null, options, request);
      }
      /// <summary>
      /// Stops a running deployment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Improbable.SpatialOS.Deployment.V1Alpha1.StopDeploymentResponse> StopDeploymentAsync(global::Improbable.SpatialOS.Deployment.V1Alpha1.StopDeploymentRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return StopDeploymentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Stops a running deployment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Improbable.SpatialOS.Deployment.V1Alpha1.StopDeploymentResponse> StopDeploymentAsync(global::Improbable.SpatialOS.Deployment.V1Alpha1.StopDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StopDeployment, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override DeploymentServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new DeploymentServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(DeploymentServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListDeployments, serviceImpl.ListDeployments)
          .AddMethod(__Method_GetDeployment, serviceImpl.GetDeployment)
          .AddMethod(__Method_CreateDeployment, serviceImpl.CreateDeployment)
          .AddMethod(__Method_UpdateDeployment, serviceImpl.UpdateDeployment)
          .AddMethod(__Method_StopDeployment, serviceImpl.StopDeployment).Build();
    }

  }
}
#endregion
